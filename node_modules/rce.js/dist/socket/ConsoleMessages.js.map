{"version":3,"file":"ConsoleMessages.js","sourceRoot":"","sources":["../../src/socket/ConsoleMessages.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RustServer } from \"../servers/interfaces\";\nimport type { PlayerKillData, WSMessage } from \"./interfaces\";\nimport {\n  playerKillData,\n  PlayerKillType,\n  QuickChat,\n  RCEEvent,\n  RegularExpressions,\n} from \"../constants\";\nimport type RCEManager from \"../Manager\";\nimport CommandHandler from \"../servers/CommandHandler\";\n\nconst EVENTS = {\n  event_airdrop: {\n    name: \"Airdrop\",\n    special: false,\n  },\n  event_cargoship: {\n    name: \"Cargo Ship\",\n    special: false,\n  },\n  event_cargoheli: {\n    name: \"Chinook\",\n    special: false,\n  },\n  event_helicopter: {\n    name: \"Patrol Helicopter\",\n    special: false,\n  },\n  event_halloween: {\n    name: \"Halloween\",\n    special: true,\n  },\n  event_xmas: {\n    name: \"Christmas\",\n    special: true,\n  },\n  event_easter: {\n    name: \"Easter\",\n    special: true,\n  },\n};\n\nexport default class ConsoleMessagesHandler {\n  public static handle(\n    manager: RCEManager,\n    message: WSMessage,\n    server: RustServer\n  ) {\n    const messageArray: string[] =\n      message.payload.data.consoleMessages.message\n        ?.split(\"\\n\")\n        .filter((e) => e !== \"\") || [];\n\n    if (!server.flags.includes(\"INIT_LOGS\")) {\n      manager.logger.debug(\n        `[${server.identifier}] Initial Logs Received: ${messageArray.length}`\n      );\n\n      server.flags.push(\"INIT_LOGS\");\n      return manager.servers.update(server);\n    }\n\n    let currentCommand;\n\n    messageArray.forEach((data) => {\n      const logMatch = data.match(RegularExpressions.Log);\n      if (!logMatch) return;\n\n      const [, date, content] = logMatch;\n      const log = content.trim();\n      if (!log) return;\n\n      manager.events.emit(RCEEvent.Message, { server, message: log });\n\n      // EVENT: COMMAND_EXECUTING\n      const commandExecutingMatch = log.match(\n        RegularExpressions.CommandExecuting\n      );\n      if (commandExecutingMatch) {\n        const cmd = commandExecutingMatch[1];\n\n        manager.logger.debug(`[${server.identifier}] Executing Match: ${cmd}`);\n\n        manager.events.emit(RCEEvent.ExecutingCommand, {\n          server,\n          command: cmd,\n        });\n\n        const command = CommandHandler.get(server.identifier, cmd);\n        if (command && !command.timestamp) {\n          manager.logger.debug(\n            `[${server.identifier}] Command In Queue: ${cmd}`\n          );\n\n          command.timestamp = date;\n          CommandHandler.add(command);\n\n          currentCommand = cmd;\n\n          return manager.logger.debug(\n            `[${server.identifier}] Command Timestamp Added: ${cmd}`\n          );\n        }\n      }\n\n      // Check for Command Response\n      const command = CommandHandler.getQueued(server.identifier, date);\n      if (command && !log.startsWith(\"[ SAVE ]\")) {\n        manager.logger.debug(\n          `[${server.identifier}] Command Response Found: ${command.command}`\n        );\n\n        command.resolve({\n          ok: true,\n          response: log,\n        });\n        clearTimeout(command.timeout);\n        CommandHandler.remove(command);\n      } else if (currentCommand) {\n        manager.logger.debug(\n          `[${server.identifier}] Command Response Not Found, Using Other Method: ${currentCommand}`\n        );\n\n        const command = CommandHandler.get(server.identifier, currentCommand);\n        if (command) {\n          command.resolve({\n            ok: true,\n            response: log,\n          });\n          clearTimeout(command.timeout);\n          CommandHandler.remove(command);\n          currentCommand = null;\n        }\n      }\n\n      // EVENT: VENDING_MACHINE_NAME\n      const vendingMachineNameMatch = log.match(\n        RegularExpressions.VendingMachineName\n      );\n      if (vendingMachineNameMatch) {\n        manager.events.emit(RCEEvent.VendingMachineName, {\n          server,\n          ign: vendingMachineNameMatch[1],\n          oldName: vendingMachineNameMatch[2],\n          newName: vendingMachineNameMatch[3],\n        });\n      }\n\n      // EVENT: QUICK_CHAT\n      const quickChatMatch = log.match(RegularExpressions.QuickChat);\n      if (quickChatMatch) {\n        const types = {\n          \"[CHAT TEAM]\": \"team\",\n          \"[CHAT SERVER]\": \"server\",\n          \"[CHAT LOCAL]\": \"local\",\n        };\n\n        manager.events.emit(RCEEvent.QuickChat, {\n          server,\n          type: types[quickChatMatch[1]],\n          ign: quickChatMatch[3],\n          message: quickChatMatch[4] as QuickChat,\n        });\n      }\n\n      // EVENT: PLAYER_SUICIDE\n      if (log.includes(\"was suicide by Suicide\")) {\n        const ign = log.split(\" was suicide by Suicide\")[0];\n\n        manager.events.emit(RCEEvent.PlayerSuicide, {\n          server,\n          ign,\n        });\n      }\n\n      // EVENT: PLAYER_RESPAWNED\n      if (log.includes(\"has entered the game\")) {\n        const ign = log.split(\" [\")[0];\n        const platform = log.includes(\"[xboxone]\") ? \"XBL\" : \"PS\";\n\n        manager.events.emit(RCEEvent.PlayerRespawned, {\n          server,\n          ign,\n          platform,\n        });\n      }\n\n      // EVENT: CUSTOM_ZONE_CREATED\n      const customZoneCreatedMatch = log.match(\n        RegularExpressions.CustomZoneCreated\n      );\n      if (customZoneCreatedMatch) {\n        manager.events.emit(RCEEvent.CustomZoneCreated, {\n          server,\n          zone: customZoneCreatedMatch[1],\n        });\n      }\n\n      // EVENT: CUSTOM_ZONE_REMOVED\n      const customZoneRemovedMatch = log.match(\n        RegularExpressions.CustomZoneRemoved\n      );\n      if (customZoneRemovedMatch) {\n        manager.events.emit(RCEEvent.CustomZoneRemoved, {\n          server,\n          zone: customZoneRemovedMatch[1],\n        });\n      }\n\n      // EVENT: PLAYER_ROLE_ADD\n      const playerRoleAddMatch = log.match(RegularExpressions.PlayerRoleAdd);\n      if (playerRoleAddMatch && log.includes(\"Added\")) {\n        manager.events.emit(RCEEvent.PlayerRoleAdd, {\n          server,\n          ign: playerRoleAddMatch[1],\n          role: playerRoleAddMatch[3],\n        });\n      }\n\n      // EVENT: ITEM_SPAWN\n      const itemSpawnMatch = log.match(RegularExpressions.ItemSpawn);\n      if (itemSpawnMatch) {\n        manager.events.emit(RCEEvent.ItemSpawn, {\n          server,\n          ign: itemSpawnMatch[1],\n          item: itemSpawnMatch[3],\n          quantity: parseInt(itemSpawnMatch[2]),\n        });\n      }\n\n      // EVENT: NOTE_EDIT\n      const noteEditMatch = log.match(RegularExpressions.NoteEdit);\n      if (noteEditMatch) {\n        const oldContent = noteEditMatch[2].trim().split(\"\\\\n\")[0];\n        const newContent = noteEditMatch[3].trim().split(\"\\\\n\")[0];\n\n        if (newContent.length > 0 && oldContent !== newContent) {\n          manager.events.emit(RCEEvent.NoteEdit, {\n            server,\n            ign: noteEditMatch[1],\n            oldContent,\n            newContent,\n          });\n        }\n      }\n\n      // EVENT: TEAM_CREATE\n      const teamCreateMatch = log.match(RegularExpressions.TeamCreate);\n      if (teamCreateMatch) {\n        manager.events.emit(RCEEvent.TeamCreate, {\n          server,\n          id: parseInt(teamCreateMatch[2]),\n          owner: teamCreateMatch[1],\n        });\n      }\n\n      // EVENT: TEAM_JOIN\n      const teamJoinMatch = log.match(RegularExpressions.TeamJoin);\n      if (teamJoinMatch) {\n        manager.events.emit(RCEEvent.TeamJoin, {\n          server,\n          id: parseInt(teamJoinMatch[3]),\n          owner: teamJoinMatch[2],\n          ign: teamJoinMatch[1],\n        });\n      }\n\n      // EVENT: TEAM_LEAVE\n      const teamLeaveMatch = log.match(RegularExpressions.TeamLeave);\n      if (teamLeaveMatch) {\n        manager.events.emit(RCEEvent.TeamLeave, {\n          server,\n          id: parseInt(teamLeaveMatch[3]),\n          owner: teamLeaveMatch[2],\n          ign: teamLeaveMatch[1],\n        });\n      }\n\n      // EVENT: KIT_SPAWN\n      const kitSpawnMatch = log.match(RegularExpressions.KitSpawn);\n      if (kitSpawnMatch) {\n        manager.events.emit(RCEEvent.KitSpawn, {\n          server,\n          ign: kitSpawnMatch[1],\n          kit: kitSpawnMatch[2],\n        });\n      }\n\n      // EVENT: KIT_GIVE\n      const kitGiveMatch = log.match(RegularExpressions.KitGive);\n      if (kitGiveMatch) {\n        manager.events.emit(RCEEvent.KitGive, {\n          server,\n          ign: kitGiveMatch[2],\n          admin: kitGiveMatch[1],\n          kit: kitGiveMatch[3],\n        });\n      }\n\n      // EVENT: SPECIAL_EVENT_SET\n      const specialEventSetMatch = log.match(\n        RegularExpressions.SpecialEventSet\n      );\n      if (specialEventSetMatch) {\n        manager.events.emit(RCEEvent.SpecialEventSet, {\n          server,\n          event: specialEventSetMatch[1] as any,\n        });\n      }\n\n      // EVENT: EVENT_START\n      if (log.startsWith(\"[event]\")) {\n        for (const [key, options] of Object.entries(EVENTS)) {\n          if (log.includes(key)) {\n            manager.events.emit(RCEEvent.EventStart, {\n              server,\n              event: options.name as any,\n              special: options.special,\n            });\n          }\n        }\n      }\n\n      // EVENT: PLAYER_KILL\n      if (log.includes(\" was killed by \")) {\n        const [victim, killer] = log\n          .split(\" was killed by \")\n          .map((str) => str.trim());\n\n        const victimData = this.getKill(victim);\n        const killerData = this.getKill(killer);\n\n        manager.events.emit(RCEEvent.PlayerKill, {\n          server,\n          victim: victimData,\n          killer: killerData,\n        });\n      }\n    });\n  }\n\n  private static getKill(ign: string): PlayerKillData {\n    const data = playerKillData.find((e) => e.id === ign.toLowerCase());\n    if (data) {\n      return {\n        id: ign,\n        name: data.name,\n        type: data.type,\n      };\n    }\n\n    if (Number(ign)) {\n      return {\n        id: ign,\n        name: \"Scientist\",\n        type: PlayerKillType.Npc,\n      };\n    }\n\n    return {\n      id: ign,\n      name: ign,\n      type: PlayerKillType.Player,\n    };\n  }\n}\n"]}