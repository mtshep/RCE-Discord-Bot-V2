{"version":3,"file":"ServiceSensors.js","sourceRoot":"","sources":["../../src/socket/ServiceSensors.ts"],"names":[],"mappings":";;AAEA,4CAAwC;AAGxC,MAAqB,oBAAoB;IAChC,MAAM,CAAC,MAAM,CAClB,OAAmB,EACnB,OAAkB,EAClB,MAAkB;QAElB,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;QAEjE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAQ,CAAC,aAAa,EAAE;YAC1C,MAAM;YACN,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1C,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;CACF;AAdD,uCAcC","sourcesContent":["import type { RustServer } from \"../servers/interfaces\";\nimport type { WSMessage } from \"./interfaces\";\nimport { RCEEvent } from \"../constants\";\nimport type RCEManager from \"../Manager\";\n\nexport default class ServiceSensorHandler {\n  public static handle(\n    manager: RCEManager,\n    message: WSMessage,\n    server: RustServer\n  ) {\n    const { cpuTotal, memory } = message.payload.data.serviceSensors;\n\n    manager.events.emit(RCEEvent.ServiceSensor, {\n      server,\n      cpuPercentage: Number(cpuTotal.toFixed(2)),\n      memoryUsed: Number(memory.used),\n    });\n  }\n}\n"]}